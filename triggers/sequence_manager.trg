-- ORS
CREATE OR REPLACE TRIGGER ORS_SEQ_TRG BEFORE
    INSERT ON ORS FOR EACH ROW
BEGIN
    IF :NEW.ORS_ID IS NULL THEN
        :NEW.ORS_ID := ORS_PATROL_SEQ.NEXTVAL;
    END IF;
END ORS_SEQ_TRG;
/

-- PATROL
CREATE OR REPLACE TRIGGER PATROL_SEQ_TRG BEFORE
    INSERT ON PATROL FOR EACH ROW
BEGIN
    IF :NEW.PATROL_ID IS NULL THEN
        :NEW.PATROL_ID := ORS_PATROL_SEQ.NEXTVAL;
    END IF;
END PATROL_SEQ_TRG;
/

-- RANK_DIC
CREATE OR REPLACE TRIGGER RANK_DICTIONARY_SEQ_TRG BEFORE
    INSERT ON RANK_DICTIONARY FOR EACH ROW
BEGIN
    IF :NEW.RANK_ID IS NULL THEN
        :NEW.RANK_ID := RANKS_SEQ.NEXTVAL;
    END IF;
END RANK_DICTIONARY_SEQ_TRG;
/

--RANK_PRIV
CREATE OR REPLACE TRIGGER RANK_PRIVELEGES_SEQ_TRG BEFORE
    INSERT ON RANK_PRIVILEGES FOR EACH ROW
BEGIN
    IF :NEW.STATUS_ID IS NULL THEN
        :NEW.STATUS_ID := RANKS_SEQ.NEXTVAL;
    END IF;
END RANK_PRIVELEGES_SEQ_TRG;
/

--POSTS
CREATE OR REPLACE TRIGGER POSTS_SEQ_TRG BEFORE
    INSERT ON POSTS FOR EACH ROW
BEGIN
    IF :NEW.POST_ID IS NULL THEN
        :NEW.POST_ID := POSTS_SEQ.NEXTVAL;
    END IF;
END POSTS_SEQ_TRG;
/

--MEMBERS
CREATE OR REPLACE TRIGGER MEMBERS_SEQ_TRG BEFORE
    INSERT ON MEMBERS FOR EACH ROW
BEGIN
    IF :NEW.MEMBER_ID IS NULL THEN
        :NEW.MEMBER_ID := MEMBERS_SEQ.NEXTVAL;
    END IF;
END MEMBERS_SEQ_TRG;
/

--MEETING
CREATE OR REPLACE TRIGGER MEETING_SEQ_TRG BEFORE
    INSERT ON MEETING FOR EACH ROW
BEGIN
    IF :NEW.MEETING_ID IS NULL THEN
        :NEW.MEETING_ID := REPORTS_SEQ.NEXTVAL;
    END IF;
END MEETING_SEQ_TRG;
/

--KNOWLEDGE
CREATE OR REPLACE TRIGGER KNOWLEDGE_SEQ_TRG BEFORE
    INSERT ON KNOWLEDGE FOR EACH ROW
BEGIN
    IF :NEW.KNOWLEDGE_ID IS NULL THEN
        :NEW.KNOWLEDGE_ID := KNOWLEDGE_MEDIA_SEQ.NEXTVAL;
    END IF;
END KNOWLEDGE_SEQ_TRG;
/

--MEDIA
CREATE OR REPLACE TRIGGER MEDIA_SEQ_TRG BEFORE
    INSERT ON MEDIA FOR EACH ROW
BEGIN
    IF :NEW.MEDIA_ID IS NULL THEN
        :NEW.MEDIA_ID := KNOWLEDGE_MEDIA_SEQ.NEXTVAL;
    END IF;
END MEDIA_SEQ_TRG;
/

--PERS_HIS
CREATE OR REPLACE TRIGGER PERSONAL_HIS_SEQ_TRG BEFORE
    INSERT ON PERSONAL_HISTORY FOR EACH ROW
BEGIN
    IF :NEW.LOG_ID IS NULL THEN
        :NEW.LOG_ID := HISTORY_SEQ.NEXTVAL;
    END IF;
END PERSONAL_HISTORY_SEQ_TRG;
/

--REPORT_HIS
CREATE OR REPLACE TRIGGER REPORT_HIS_SEQ_TRG BEFORE
    INSERT ON REPORT_HISTORY FOR EACH ROW
BEGIN
    IF :NEW.LOG_ID IS NULL THEN
        :NEW.LOG_ID := HISTORY_SEQ.NEXTVAL;
    END IF;
END REPORT_HISTORY_SEQ_TRG;
/

--INTERNAL_HIS
CREATE OR REPLACE TRIGGER INTERNAL_ASS_HIS_SEQ_TRG BEFORE
    INSERT ON INTERNAL_ASSIGNS_HISTORY FOR EACH ROW
BEGIN
    IF :NEW.LOG_ID IS NULL THEN
        :NEW.LOG_ID := HISTORY_SEQ.NEXTVAL;
    END IF;
END INTERNAL_ASS_HIS_SEQ_TRG;
/

--PUBLIC_HIS
CREATE OR REPLACE TRIGGER PUBLIC_ACT_HIS_SEQ_TRG BEFORE
    INSERT ON PUBLIC_ACTIVITIES_HISTORY FOR EACH ROW
BEGIN
    IF :NEW.LOG_ID IS NULL THEN
        :NEW.LOG_ID := HISTORY_SEQ.NEXTVAL;
    END IF;
END PUBLIC_ACT_HIS_SEQ_TRG;
/

--GATHERING
CREATE OR REPLACE TRIGGER GATHERING_REPORTS_SEQ_TRG BEFORE
    INSERT ON GATHERING_REPORTS FOR EACH ROW
BEGIN
    IF :NEW.REPORT_ID IS NULL THEN
        :NEW.REPORT_ID := REPORTS_SEQ.NEXTVAL;
    END IF;
END GATHERING_REPORTS_SEQ_TRG;
/

--EVENTS
CREATE OR REPLACE TRIGGER EVENTS_SEQ_TRG BEFORE
    INSERT ON EVENTS FOR EACH ROW
BEGIN
    IF :NEW.EVENT_ID IS NULL THEN
        :NEW.EVENT_ID := REPORTS_SEQ.NEXTVAL;
    END IF;
END EVENTS_SEQ_TRG;
/

--DUTIES
CREATE OR REPLACE TRIGGER DUTIES_SEQ_TRG BEFORE
    INSERT ON DUTIES FOR EACH ROW
BEGIN
    IF :NEW.DUTY_ID IS NULL THEN
        :NEW.DUTY_ID := DUTY_SEQ.NEXTVAL;
    END IF;
END DUTIES_SEQ_TRG;
/

--ADDRESS
CREATE OR REPLACE TRIGGER ADDRESS_SEQ_TRG BEFORE
    INSERT ON ADDRESS FOR EACH ROW
BEGIN
    IF :NEW.ADDRESS_ID IS NULL THEN
        :NEW.ADDRESS_ID := ADDRESS_SEQ.NEXTVAL;
    END IF;
END ADDRESS_SEQ_TRG;